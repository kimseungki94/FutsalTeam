var fs = require('fs');
var express = require('express');
var server = express();
var bodyParser = require('body-parser');
var cookieParser = require('cookie-parser');
server.use(bodyParser.urlencoded({extended: false}))
server.use(cookieParser())
function templateList(){
    var topics = fs.readdirSync('data');
    var i = 0;
    var listTag = '';
    while(i < topics.length){
        listTag = listTag + `<li><a href="/topic/${topics[i]}">${topics[i]}</a></li>`;
        i = i + 1;
    }
    return listTag;
}

function templateHTML(listTag, title, desc,nickname){
    var authUI = ''
    if(nickname){
        authUI = `<a href = "/logout_process">logout</a>`
    }else{
        authUI = `<a href = "/login">login</a>`
    }
    var content = `
            <!doctype html>
            <html>
                <head>
                    <meta charset="utf-8">
                
                    ${authUI}
                    <title>WEB</title>
                </head>
                <body>
                    <h1><a href="/">WEB</a></h1>
                    <ul>
                        ${listTag}
                    </ul>
                    <a href="/create">create</a>
                    <h2>${title}</h2>
                    ${desc}
                </body>
            </html>
        `;
    return content;
}
server.get('/cookie/set',function(request,response){
    response.append('Set-Cookie','problem=true;');
    //쿠키값을 보낼때는 set-cookie라는 값을 써야함!

    response.end('set cookie');
})
server.get('/cookie/get',function(request,response){
    console.log(request.headers.cookie);
    console.log(request.cookies);//쿠키값을 보낼때는 set-cookie라는 값을 써야함!


    response.end('set cookie');
})
server.get('/',function(request,response){
    console.log(request.cookies);
    var username = request.cookies.username;
    var password = request.cookies.password;
    var nickname = null;
    if(username === authData.username && password === authData.password){
        nickname = authData.nickname;
        console.log('good');
    }
    //순수 NodeJs
    // response.write('hi');
    // response.end();
    var title = 'Welcome';
    var desc = 'Hello, web';
    var listTag = templateList();
    var content = templateHTML(listTag, title, desc,nickname);

    response.write(content);
    response.end();
    
});
server.get('/topic',function(request,response){
    console.log('hi2');
    response.send('hi');
})
server.get('/a',function(request,response){
    console.log('hi3');
    response.send('hi3');
});
server.get('/topic/:id',function(request,response){
    var username = request.cookies.username;
    var password = request.cookies.password;
    var nickname = null;
    if(username === authData.username && password === authData.password){
        nickname = authData.nickname;
        console.log('good');
    }
    var title = request.params.id;
    var desc = fs.readFileSync('data/'+title, 'utf8');
    var listTag = templateList();
    var content = templateHTML(listTag, title, desc,nickname);

    response.write(content);
    response.end();
});
server.get('/create',function(request,response){
    console.log('hi');
    //순수 NodeJs
    // response.write('hi');
    // response.end();
    var username = request.cookies.username;
    var password = request.cookies.password;
    var nickname = null;
    if(username === authData.username && password === authData.password){
        nickname = authData.nickname;
        console.log('good');
    }else{
        return response.redirect('/');
    }

    var title = 'Create';
    var desc = `
    <form action="/create_process" method="post">
    <p>
    <input type="text" name="title" 
    placeholder="title"></p>
    <p>
    <textarea name="desc"
    placeholder="description"></textarea>
    </p>
    <p>
    <input type="submit">
    </p>
    </form>
    `;
    var listTag = templateList();
    var content = templateHTML(listTag, title, desc);

    response.write(content);
    response.end();
    
});
server.post('/create_process',function(request,response){
    console.log(request.body.title);
    var title = request.body.title;
    var desc = request.body.desc;
    fs.writeFileSync(`data/${title}`, desc);
    response.redirect('/topic/'+title);
});
server.get('/login',function(request,response){
    console.log('hi');
    //순수 NodeJs
    // response.write('hi');
    // response.end();
    var title = 'Login';
    var desc = `
    <form action="/login_process" method="post">
    <p>
    <input type="text" name="username" 
    placeholder="title"></p>
    <p>
    <input type="password" name="password" 
    placeholder="password"></p>
    <p>
    <input type="submit" value="login">
    </p>
    </form>
    `;
    var listTag = templateList();
    var content = templateHTML(listTag, title, desc);

    response.write(content);
    response.end();
    
});
var authData = {username:'seung',password:'1',nickname:'seung'}
server.post('/login_process',function(request,response){
    console.log(request.body);
    // var title = request.body.title;
    // var desc = request.body.desc;
    var username = request.body.username;
    var password = request.body.password;
    if(username === authData.username){
        console.log('아이디를 맞춤');
        if(password === authData.password){
            console.log('비밀번호 맞음');
            response.append('Set-Cookie',`username=${username};`);
            response.append('Set-Cookie',`password=${password};`);
            return response.redirect('/');
        }
        
    }
    return response.send('로그인비활성화');
});
server.get('/logout_process',function(request,response){
    response.append('Set-Cookie', 'username=deleted; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT'); 
    response.append('Set-Cookie', 'password=deleted; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT'); 
    response.redirect('/');
});
server.listen(3000);